@using Google.Protobuf.WellKnownTypes
@model Frycz_pcdb.computer

@{
    ViewBag.Title = "AddComputer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Computer</h2>

@using (Html.BeginForm("save", "AddComputer"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>computer</h4>
        <hr />
        <input name="count" value="@ViewBag.numberofadd" style="display: none"/>
        @for(int i = 1; i <= ViewBag.numberofadd ; i++) { 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name,"Computer name " + i + ": ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="@i" name="@i" type="text" value="@ViewBag.first" class="form-control addInput">
                @Html.ValidationMessage("eqcomp", new { @class = "text-danger" })
            </div>
        </div>
        }

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.user.fullname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <input id="userInput" name="userInput" type="text" class="form-control userInput">
                    <button type="button" id="userInputButton" class="userInputButton"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-search"></i></button>
                </div>
                @Html.ValidationMessage("userNotFound", new { @class = "text-danger" })
            </div>
        </div>
        @if(ViewBag.numberofadd == 1) { 
        <div class="form-group">
            @Html.LabelFor(model => model.mac_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mac_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mac_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serial_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serial_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serial_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inventory_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inventory_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inventory_number, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.guarantee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.guarantee, new { htmlAttributes = new { @class = "form-control date-picker", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.guarantee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idos, "OS: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idos", ViewBag.os as IEnumerable<System.Web.Mvc.SelectListItem>, htmlAttributes: new { @class = "form-control userInput" })
                <button type="submit" id="userInputButton" class="userInputButton btn btn-primary"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-search"></i></button>
                @Html.ValidationMessageFor(model => model.idos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idcomputer_brand, "Computer model: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idcomputerBrand", ViewBag.model as IEnumerable<System.Web.Mvc.SelectListItem>, htmlAttributes: new { @class = "form-control userInput" })
                <button type="submit" id="userInputButton" class="userInputButton btn btn-primary"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-search"></i></button>
                @Html.ValidationMessageFor(model => model.idcomputer_brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idcomputer_type, "Computer type: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idcomputerType", ViewBag.type as IEnumerable<System.Web.Mvc.SelectListItem>, htmlAttributes: new { @class = "form-control userInput" })
                <button type="submit" id="userInputButton" class="userInputButton btn btn-primary"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-search"></i></button>
                @Html.ValidationMessageFor(model => model.idcomputer_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idcomputer_parameters, "Computer parameters: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idcomputer_parameters", ViewBag.parameters as IEnumerable<System.Web.Mvc.SelectListItem>, htmlAttributes: new { @class = "form-control userInput" })
                <button type="submit" id="userInputButton" class="userInputButton btn btn-primary"><span class="glyphicon glyphicon-plus"></span><i class="fa fa-search"></i></button>
                @Html.ValidationMessageFor(model => model.idcomputer_parameters, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.bpcs_sessions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bpcs_sessions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bpcs_sessions, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" id="editSubButtons">
            <button type="submit" class="btn btn-primary">Save changes</button>
            <button type="button" onclick="location.href = '@Url.Action("Index", "AllComputer")'" class="btn btn-light">Cancel</button>
        </div>
    </div>

    }


<div>
    <br />
    <br />
    <br />
    <br />
</div>


<script type="text/javascript">

    $("#userInput").autocomplete({
        source: function (request, response) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSearchValueUser","AddComputer")',
                dataType: 'json',
                data: { search: $("#userInput").val() },
                success: function(data) {
                    response($.map(data,
                        function(item) {
                            return { label: item, value: item }
                        }));
                },
                error: function(xhr, status, error) {
                    alert("Error: users load error.");
                }
            });
        }
    });


    $(function() {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
    });
</script>
